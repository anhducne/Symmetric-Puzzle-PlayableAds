{"version":3,"sources":["assets\\Scripts\\Common\\Pool\\PoolManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BasePool from \"./BasePool\";\r\nimport Singleton from \"../Singleton\";\r\nimport { BulletType, ShipType } from \"../EnumDefine\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('Bullet')\r\nexport class Bullet {\r\n    @property(BasePool)\r\n    Pool: BasePool = null;\r\n    @property({ type: cc.Enum(BulletType) })\r\n    public typeBullet: BulletType = BulletType.B5;\r\n}\r\n@ccclass('Dragon')\r\nexport class Ship {\r\n    @property(BasePool)\r\n    Pool: BasePool = null;\r\n    @property({ type: cc.Enum(ShipType) })\r\n    public typeship: ShipType = ShipType.S1;\r\n}\r\n@ccclass\r\nexport default class PoolManager extends Singleton<PoolManager> {\r\n    @property(Bullet)\r\n    arrayBullet: Bullet[] = [];\r\n    @property(Ship)\r\n    arrayShip: Ship[] = [];\r\n    @property(BasePool)\r\n    hitVFX: BasePool = null;\r\n    @property(BasePool)\r\n    hitVFX2: BasePool = null;\r\n    @property(BasePool)\r\n    enemyExplosion: BasePool = null;\r\n    @property(BasePool)\r\n    enemyExplosion2: BasePool = null;\r\n    @property(BasePool)\r\n    Coin: BasePool = null;\r\n    constructor() {\r\n        super();\r\n        PoolManager._instance = this;\r\n    }\r\n    SpawnerBullet(type: BulletType): cc.Node {\r\n        for (let i = 0; i < this.arrayBullet.length; ++i) {\r\n            if (type == this.arrayBullet[i].typeBullet) {\r\n                return this.arrayBullet[i].Pool.createObject(this.node);\r\n            }\r\n        }\r\n    }\r\n    SpawnerShip(type: ShipType): cc.Node {\r\n        for (let i = 0; i < this.arrayShip.length; ++i) {\r\n            if (type == this.arrayShip[i].typeship) {\r\n                return this.arrayShip[i].Pool.createObject(this.node);\r\n            }\r\n        }\r\n    }\r\n    RecycleBullet(type: BulletType, node: cc.Node) {\r\n        for (let i = 0; i < this.arrayBullet.length; ++i)\r\n            if (type == this.arrayBullet[i].typeBullet) {\r\n                this.arrayBullet[i].Pool.RecycleObject(node);\r\n            }\r\n    }\r\n}\r\n"]}