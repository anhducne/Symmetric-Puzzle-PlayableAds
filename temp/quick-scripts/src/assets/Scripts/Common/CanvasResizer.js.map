{"version":3,"sources":["assets\\Scripts\\Common\\CanvasResizer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,kBAAuD,EAArD,oBAAO,EAAE,sBAAQ,EAAE,sCAAkC,CAAC;AAI9D;IAA2C,iCAAY;IAFvD;QAAA,qEAuCC;QAlCG,sBAAgB,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAEnD,eAAS,GAAW,CAAC,CAAC;QACtB,gBAAU,GAAW,CAAC,CAAC;;IA+B3B,CAAC;IA5BG,8BAAM,GAAN;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,8BAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,oCAAY,GAAZ;QACI,IAAI,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACvC,sBAAsB;QACtB,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,MAAM,EAAE;YAE5E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC;YAEnC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE;gBACjG,IAAI,aAAa,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7H,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,aAAa,CAAC;gBAC7C,EAAE,CAAC,GAAG,CAAC,sBAAsB,GAAG,aAAa,CAAC,CAAC;aAClD;iBAAM;gBACH,IAAI,aAAa,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBAC/H,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,aAAa,CAAC;gBAC7C,EAAE,CAAC,GAAG,CAAC,sBAAsB,GAAG,aAAa,CAAC,CAAC;aAClD;SACJ;IACL,CAAC;IAjCD;QADC,QAAQ;2DAC0C;IAHlC,aAAa;QAFjC,OAAO;QACP,gBAAgB,CAAC,EAAE,CAAC,MAAM,CAAC;OACP,aAAa,CAqCjC;IAAD,oBAAC;CArCD,AAqCC,CArC0C,EAAE,CAAC,SAAS,GAqCtD;kBArCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, requireComponent } = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.Canvas)\r\nexport default class CanvasResizer extends cc.Component {\r\n\r\n    @property\r\n    designResolution: cc.Size = new cc.Size(1280, 720);\r\n\r\n    lastWitdh: number = 0;\r\n    lastHeight: number = 0;\r\n    canvas: cc.Canvas;\r\n\r\n    onLoad() {\r\n        this.canvas = this.node.getComponent(cc.Canvas);\r\n        this.updateCanvas();\r\n    }\r\n\r\n    update(dt) {\r\n        this.updateCanvas();\r\n    }\r\n\r\n    updateCanvas() {\r\n        var frameSize = cc.view.getFrameSize();\r\n        // cc.log(frameSize );\r\n        if (this.lastWitdh !== frameSize.width || this.lastHeight !== frameSize.height) {\r\n\r\n            this.lastWitdh = frameSize.width;\r\n            this.lastHeight = frameSize.height;\r\n\r\n            if (this.designResolution.width / this.designResolution.height > frameSize.width / frameSize.height) {\r\n                var newDesignSize = cc.size(this.designResolution.width, this.designResolution.width * (frameSize.height / frameSize.width));\r\n                this.canvas.designResolution = newDesignSize;\r\n                cc.log(\"update canvas size: \" + newDesignSize);\r\n            } else {\r\n                var newDesignSize = cc.size(this.designResolution.height * (frameSize.width / frameSize.height), this.designResolution.height);\r\n                this.canvas.designResolution = newDesignSize;\r\n                cc.log(\"update canvas size: \" + newDesignSize);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}