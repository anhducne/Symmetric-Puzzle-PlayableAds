{"version":3,"sources":["assets\\Scripts\\Common\\Pool\\BasePool.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAYI;QAPA,WAAM,GAAc,IAAI,CAAC;QAGlB,UAAK,GAAY,IAAI,CAAC;QAEtB,SAAI,GAAW,CAAC,CAAC;QAGpB,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC9B,uGAAuG;QACvG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;YAChC,IAAI,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,uBAAuB;YAC9D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,qCAAqC;SAC5D;IACL,CAAC;IAED,6DAA6D;IAC7D,gDAAgD;IAChD,0BAA0B;IAC1B,sCAAsC;IACtC,qCAAqC;IACrC,mBAAmB;IACnB,iDAAiD;IACjD,YAAY;IACZ,+BAA+B;IAC/B,0BAA0B;IAC1B,eAAe;IACf,iDAAiD;IACjD,+BAA+B;IAC/B,sBAAsB;IACtB,QAAQ;IACR,IAAI;IACH,+BAAY,GAAZ,UAAa,MAAe;QACzB,IAAG,IAAI,CAAC,KAAK,EAAE;YACX,IAAI,GAAG,GAAa,IAAI,CAAC;YACzB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBACtB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACtB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;aACrB;iBAAM;gBACH,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACrC;YACD,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;YACpB,OAAO,GAAG,CAAC;SACd;aAAM;YACH,IAAI,GAAG,GAAa,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChD,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;YACpB,OAAO,GAAG,CAAC;SACd;IACL,CAAC;IACD,oDAAoD;IACpD,gDAAgD;IAChD,8BAA8B;IAC9B,eAAe;IACf,yBAAyB;IACzB,QAAQ;IACR,IAAI;IACJ,gCAAa,GAAb,UAAc,GAAY;QACtB,IAAG,IAAI,CAAC,KAAK,EAAE;YACX,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACtB;aAAM;YACH,GAAG,CAAC,OAAO,EAAE,CAAC;SACjB;IACL,CAAC;IAED,4BAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAnED;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;4CACK;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;2CACQ;IAE7B;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;0CACG;IAVP,QAAQ;QAD5B,OAAO,CAAC,UAAU,CAAC;OACC,QAAQ,CA0E5B;IAAD,eAAC;CA1ED,AA0EC,IAAA;kBA1EoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass(\"BasePool\")\r\nexport default class BasePool {\r\n\r\n    private pool: cc.NodePool;\r\n\r\n    @property(cc.Prefab)\r\n    Prefab: cc.Prefab = null;\r\n\r\n    @property(cc.Boolean)\r\n    public reuse: boolean = true;\r\n    @property(cc.Integer)\r\n    public Size: number = 0;\r\n\r\n    constructor() {\r\n        this.pool = new cc.NodePool();\r\n        //Khong can biet chinh xac so luong nut ban dau ta se sinh ra cac nut neu bi thieu trong thoi gian chay\r\n        for (let i = 0; i < this.Size; ++i) {\r\n            let obj = cc.instantiate(this.Prefab); // create node instance\r\n            this.pool.put(obj); // populate your pool with put method\r\n        }\r\n    }\r\n\r\n    // createObject(prefab : cc.Prefab,parent: cc.Node): cc.Node{\r\n    //     if(this.reuse && prefab == this.Prefab) {\r\n    //         let obj = null;\r\n    //         if (this.pool.size() > 0) {\r\n    //             obj = this.pool.get();\r\n    //         } else {\r\n    //             obj = cc.instantiate(this.Prefab);\r\n    //         }\r\n    //         obj.parent = parent;\r\n    //         return obj;    \r\n    //     } else {\r\n    //         let obj = cc.instantiate(this.Prefab);\r\n    //         obj.parent = parent;\r\n    //         return obj;\r\n    //     }\r\n    // }\r\n     createObject(parent: cc.Node): cc.Node{\r\n        if(this.reuse) {\r\n            let obj : cc.Node = null;\r\n            if (this.pool.size() > 0) {               \r\n                obj = this.pool.get();\r\n                obj.active = true;\r\n            } else {\r\n                obj = cc.instantiate(this.Prefab);\r\n            }\r\n            obj.parent = parent;\r\n            return obj;    \r\n        } else {\r\n            let obj : cc.Node = cc.instantiate(this.Prefab);\r\n            obj.parent = parent;\r\n            return obj;\r\n        }\r\n    }\r\n    // RecycleObject( prefab : cc.Prefab,obj: cc.Node) {\r\n    //     if(this.reuse && prefab == this.Prefab) {\r\n    //         this.pool.put(obj);\r\n    //     } else {\r\n    //         obj.destroy();\r\n    //     }\r\n    // }\r\n    RecycleObject(obj: cc.Node) {\r\n        if(this.reuse) {\r\n            obj.active = false;\r\n            this.pool.put(obj);\r\n        } else {\r\n            obj.destroy();\r\n        }\r\n    }\r\n\r\n    clearPool(){\r\n        this.pool.clear();\r\n    }\r\n    \r\n}"]}