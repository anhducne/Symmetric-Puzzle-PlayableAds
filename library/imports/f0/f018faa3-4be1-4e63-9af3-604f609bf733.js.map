{"version":3,"sources":["assets\\SymmetricGamePlay\\Scripts\\DragRotate.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport GlobalGamePlay from \"../../Scripts/Common/Base/GlobalGamePlay\";\r\nimport Global from \"../../Scripts/Common/Base/Global\";\r\nimport SoundManager from \"../../Scripts/Common/SoundManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DragRotate extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    nodeTarget: cc.Node = null;\r\n    \r\n    touchPos: cc.Vec2 = null;\r\n    boolOnTouch: boolean = false;\r\n    isControllable: boolean = false;\r\n    @property(cc.Float)\r\n    puzzeStage: number ;\r\n\r\n    isTouchMove: boolean = false;\r\n\r\n    onDoneMerge: boolean = false;\r\n\r\n    start () {\r\n        this.touchPos = this.node.getPosition();\r\n        this.ActiveEvent(true);\r\n        this.isControllable = true;\r\n        this.ScanAngleNode();\r\n        this.onDoneMerge = false;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (this.boolOnTouch) {\r\n            if(!this.onDoneMerge){\r\n                this.DragPuzze();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    ActiveEvent(bool: boolean){\r\n        if(bool){\r\n            this.node.on(cc.Node.EventType.TOUCH_START, this.ontouchStart, this);\r\n            this.node.on(cc.Node.EventType.TOUCH_MOVE, this.ontouchMove, this);\r\n            this.node.on(cc.Node.EventType.TOUCH_END, this.ontouchEnd, this);\r\n            this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.ontouchEnd, this);\r\n        }else{\r\n            this.node.off(cc.Node.EventType.TOUCH_START, this.ontouchStart, this);\r\n            this.node.off(cc.Node.EventType.TOUCH_MOVE, this.ontouchMove, this);\r\n            this.node.off(cc.Node.EventType.TOUCH_END, this.ontouchEnd, this);\r\n            this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.ontouchEnd, this);\r\n        }\r\n    }\r\n\r\n    ontouchStart(event: cc.Touch){\r\n        if(this.isControllable){\r\n            this.boolOnTouch = true;\r\n            // cc.log(\"On 1 click !\");   \r\n            // if(!this.onDoneMerge){\r\n            //     this.RotateObject45();\r\n            // }\r\n        }\r\n    }\r\n\r\n    ontouchMove(event: cc.Touch){\r\n        if(this.isControllable){\r\n            this.boolOnTouch = true;\r\n            this.isTouchMove = true;\r\n            let delta = event.getDelta();\r\n            this.touchPos.x += delta.x;\r\n            this.touchPos.y += delta.y;\r\n        }\r\n    }\r\n\r\n    ontouchEnd(event: cc.Touch){\r\n        if(this.isControllable){\r\n            if(!this.onDoneMerge){\r\n                if(!this.isTouchMove){\r\n                    this.RotateObject45();\r\n                }\r\n            }\r\n            this.isTouchMove = false;\r\n            let a = Math.sqrt((this.node.x - this.nodeTarget.x) * (this.node.x - this.nodeTarget.x) +\r\n                (this.node.y - this.nodeTarget.y) * (this.node.y - this.nodeTarget.y));\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    RotateObject45(){\r\n    // Plus rotate angle \r\n        this.node.angle -= 45;\r\n        if(this.node.angle == -360){\r\n            this.node.angle = 0;\r\n        }\r\n        cc.audioEngine.playEffect(GlobalGamePlay.Instance(GlobalGamePlay).gameplay.soundManager.TouchSound, false);\r\n        //cc.log(\"Angle now: \" + this.node.angle);\r\n        this.ScanAngleNode();\r\n    }\r\n    \r\n\r\n    ScanAngleNode(){\r\n        let tempIndex;\r\n        if(Math.abs(this.node.angle) === 0){\r\n            tempIndex = 0;\r\n        }else if(Math.abs(this.node.angle) === 45){\r\n            tempIndex = 1;\r\n        }else if(Math.abs(this.node.angle) === 90){\r\n            tempIndex = 2;\r\n        }else if(Math.abs(this.node.angle) === 135){\r\n            tempIndex = 3;\r\n        }else if(Math.abs(this.node.angle) === 180){\r\n            tempIndex = 4;\r\n        }else if(Math.abs(this.node.angle) === 225){\r\n            tempIndex = 5;\r\n        }else if(Math.abs(this.node.angle) === 270){\r\n            tempIndex = 6;\r\n        }else if(Math.abs(this.node.angle) === 315){\r\n            tempIndex = 7;\r\n        }else if(Math.abs(this.node.angle) === 360){\r\n            tempIndex = 8;\r\n        }\r\n\r\n        //cc.log(\"Index temp now: \" + tempIndex);\r\n\r\n        switch(this.puzzeStage){\r\n            case 1: \r\n                GlobalGamePlay.Instance(GlobalGamePlay).gameplay.indexPuzze11 = tempIndex;\r\n                break;\r\n            case 2:\r\n                GlobalGamePlay.Instance(GlobalGamePlay).gameplay.indexPuzze12 = tempIndex;\r\n                break;\r\n            case 3:\r\n                GlobalGamePlay.Instance(GlobalGamePlay).gameplay.indexPuzze2 = tempIndex;\r\n                break;\r\n            case 4: \r\n                GlobalGamePlay.Instance(GlobalGamePlay).gameplay.indexPuzze3 = tempIndex;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //cc.log(\"PuzzeStageNow: \" + this.puzzeStage);\r\n    }\r\n\r\n    DragPuzze() {\r\n        \r\n        if(this.touchPos.x >= -300 && this.touchPos.x <= 300){\r\n            this.node.x = cc.misc.lerp(this.node.x, this.touchPos.x, 0.7);\r\n        }\r\n        //cc.log(\"x pos: \" + this.node.x);\r\n        if(this.touchPos.y <= 500 && this.touchPos.y >= -500){\r\n            this.node.y = cc.misc.lerp(this.node.y, this.touchPos.y, 0.7)\r\n        }\r\n        //cc.log(\"y pos: \" + this.node.y);\r\n        // this.node.x = cc.misc.lerp(this.node.x, this.touchPos.x, 0.7);\r\n        // this.node.y = cc.misc.lerp(this.node.y, this.touchPos.y, 0.7)\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}